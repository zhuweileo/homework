## 问题1
1. 浮动元素会脱离标准文档流，不再占据文档流空间；
2. 浮动元素不能撑开父容器；
3. 两个相邻的块级浮动元素可以处于同一行；
4. 普通元素感知不到浮动元素的存在，会和浮动元素同时绘制在同一区域，产生重叠的效果；
5. 普通元素的文字内容可以感知到浮动元素，并避开浮动元素；

## 问题2
清除浮动是使浮动元素周围的元素可以感知到浮动元素的存在，不受其影响。
清除浮动的方法：
1. 使用clear属性
2. 使用一些一些属性产生BFC以清除浮动；


## 问题3 
1. `positon:absolute`绝对定位
参考点：离其最近的使用过absolute或relative定位的祖先元素，如果没有，则已html标签为参考点；
使用场景：
2. `position:relative`相对定位
参考点：未使用定位之前，它自身在文档流中的位置；
使用场景：
3. `position:fixed;`固定定位
参考点：浏览器窗口
使用场景：目标元素不随文档的移动而移动，只希望固定于浏览器窗口的固定位置。

## 问题4
z-index用于设置元素的堆叠顺序。高堆叠顺序的元素会处于低堆叠顺序元素的前面。
z-index只在定位元素上有效，可以设置为负值。
图16
## 问题5 
使用relative使元素移位，不会影响挨着它的元素的位置；
图8
使用负margin移位，会使挨着元素的相邻元素也跟着移位；
图9

## 问题6
```
{
	position:absolute;
	left:50%;
	margin-left:-(元素宽度/2)px;
	top:50%;
	margin-top:-(元素高度/2)px;
}

```
图10

## 问题7
BFC全称block formatting context,翻译为块级格式化上下文。当元素包含以下属性之一，就会形成一种新的块级模型，就称为BFC。
```
float为 left|right
overflow为 hidden|auto|scroll
display为 table-cell|table-caption|inline-block
position为 absolute|fixed
```
BFC有以下特点：
- BFC会阻止垂直外边距折叠
图18
- BFC不会重叠浮动元素
图19
- BFC可以清除浮动
图20


## 问题8
外边距合并三种情况：
1. 兄弟元素外边距合并
图11
2. 父子元素外边距合并
图12，13
3. 自己的外边距合并
图14 15 
- 阻止相邻元素外边距合并
原理就是：使其中一个元素形成BFC
17.png








