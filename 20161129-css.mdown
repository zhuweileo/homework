## 问题1
### CSS引入方式：
1. 内部样式
把所有样式信息都放在`<style>`标签内。
示例：
```
<style type="text/css">
	p{
		color:#aaa;
	}
</style>
```
2. 外部样式
把样式信息都单独存放在一个CSS文件中，然后使用`link`标签去引用css文件。
示例：
```
<link rel="stylesheet" type="text/css" href="css/main.css">
```
3. 内联样式
将样式信息通过`style`属性，直接放在标签内部。
示例：
```
<p style="color:#aaa,width=10px"></p>
```
### `link`和`@import`有什么区别？
`link`和`@import`都是通过引入外部样式文件来为html增加样式的。区别在于`@import`用于html文件中时必须放在`<style>`标签中，在css文件中也可以直接使用；
`link`是html标签，只能在html文件中使用。
## 问题2
1. id选择器
`#id_name{}`
2. 类选择器
`.class_name{}`
3. 标签选择器
`tag_name{}`
4. 通配符选择器
`* {}`
6. type选择器
`input[type=type_name]{}`
7. 子元素选择器
`A B{}`
8. 第一代子元素选择器
`A>B{}`
9. 伪类选择器
	- `:hover{}`
	- `:visited{}`
	- `:active{}`
	- `:link{}`
	- `:first-child{}`
	- `:first-of-child{}`
	
10. 伪元素选择器
	- `:before{}`
	- `:after{}`
## 问题3
CSS2的文档中推荐的顺序如下：
```
a:link{}
a:visited{}
a:hover{}
a:active{}
```
可以记忆为LoVe,HAte（爱恨交织啊！）
原因如下：这四种选择器的权重是一样的，当他们同时满足条件时，下面的会覆盖掉上面的。
按照CSS2推荐的顺序我们来分析一下：初始状态的a连接毫无疑问应用`:link{}`的样式，当链接被访问后选中`:visited{}`中的样式，`:link{}`中的样式失效，我们再次把鼠标移到连接上时触发`:hover{}`中的样式。注意**此时`:visited{}`中的样式并没有失效**，而是因为`:hover{}`和`:visited{}`中的样式同时生效，但是`:hover{}`中的样式在下面，把`:visited{}`中的样式覆盖掉了。此时，我们按下鼠标同时触发`:visited{}``:hover{}``:actived{}`,位于最下面的`:actived{}`就会覆盖上面的两个样式，这正是我们想要的效果。

换一种情况，我们把`:hover{}`放最上面：
```
a:hover{}
a:link{}
a:visited{}
a:active{}
```
由于一个a标签不是`:link{}`状态，就是`:visited{}`状态，这两个状态必然有一个是激活的，而他们都位于`:hover{}`下面，总有一个会覆盖掉`:hover{}`的，所以`:hover{}`就失效了。这就是`:hover{}`为什么要放在`:link{}`和`:visited{}`下面的原因。

## 问题4

我们经常见到同一个元素被多个选择器同时选中，并设置了同一属性，但是浏览器只能选择一种来作为该属性的展示，这时候浏览器是根据如下规则来进行判断：
将所有选择器分为a,b,c,d四类，
a类：行内样式；
b类：ID选择器；
c类：类选择器，属性选择器，伪类选择器；
d类：标签选择器，伪元素选择器。

当遇到复杂的选择器时，就来为其中包含的各类选择器计分。
例如：	
```
一号选手
#ct .box p{}   
```
`#ct`是b类选择器，`.box`是c类选择器，`p`是d类选择器
最终得分：a=0,b=1,c=1,d=1;

```
二号选手
div#header:after{}
```
`div`d类，`#header`b类，`:after`d类
最终得分：a=0,b=1,c=0,d=2;

判断方法：先比a，大的优先级高，相同再比较b，大的优先级高，依次类推，如果abcd都相同，则谁在样式表的下方，谁优先级高。

根据该规则：二号比一号的优先级低。

PS:如果样式后面有`!important`，则忽略以上，有限级最高。